import { async } from '@firebase/util';
import {
    getFirestore,
    collection,
    getDocs,
    setDoc,
    getDoc,
    doc
} from 'firebase/firestore/lite';
import { db } from '../firebase-config';

export async function writeDiseases() {
    setDoc(doc(db, 'diseases', 'disease_list'), {
        list: [
            {
                name: '–ö—ñ—Ä',
                key: 'measles',
                symptoms: {
                    temperature: 20,
                    snots: 10,
                    cough: 10,
                    throat_ache: 0,
                    gland: 0,
                    suffocation: 0,
                    rash: 30,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 0,
                    chills: 0,
                    photosensitivity: 30
                },
                description: ""
            },

            {
                name: '–ì—Ä–∏–ø',
                key: 'flu',
                symptoms: {
                    temperature: 20,
                    snots: 10,
                    cough: 10,
                    throat_ache: 0,
                    gland: 0,
                    suffocation: 0,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 30,
                    chills: 30,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–ó–∞–ø–∞–ª–µ–Ω–Ω—è –ª–µ–≥–µ–Ω—å',
                key: 'pneumonia',
                symptoms: {
                    temperature: 20,
                    snots: 0,
                    cough: 20,
                    throat_ache: 0,
                    gland: 0,
                    suffocation: 30,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 15,
                    chills: 15,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–ê–Ω–≥—ñ–Ω–∞',
                key: 'tonsillitis',
                symptoms: {
                    temperature: 20,
                    snots: 0,
                    cough: 0,
                    throat_ache: 20,
                    gland: 30,
                    suffocation: 0,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 15,
                    chills: 15,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–°–∫–∞—Ä–ª–∞—Ç–∏–Ω–∞',
                key: 'scarlet',
                symptoms: {
                    temperature: 15,
                    snots: 0,
                    cough: 0,
                    throat_ache: 15,
                    gland: 10,
                    suffocation: 0,
                    rash: 30,
                    vomiting: 30,
                    ears_swelling: 0,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 0,
                    chills: 0,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–°–≤–∏–Ω–∫–∞',
                key: 'mumps',
                symptoms: {
                    temperature: 30,
                    snots: 0,
                    cough: 0,
                    throat_ache: 0,
                    gland: 30,
                    suffocation: 0,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 40,
                    stomach_ache: 0,
                    intestants_disorder: 0,
                    skin_yellowing: 0,
                    headache: 0,
                    chills: 0,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–î–µ–∑–∏–Ω—Ç–µ—Ä—ñ—è',
                key: 'dysentery',
                symptoms: {
                    temperature: 20,
                    snots: 0,
                    cough: 0,
                    throat_ache: 0,
                    gland: 0,
                    suffocation: 0,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 40,
                    intestants_disorder: 40,
                    skin_yellowing: 0,
                    headache: 0,
                    chills: 0,
                    photosensitivity: 0
                },
                description: ""
            },

            {
                name: '–ì–µ–ø–∞—Ç–∏—Ç',
                key: 'hepatitis',
                symptoms: {
                    temperature: 0,
                    snots: 0,
                    cough: 0,
                    throat_ache: 0,
                    gland: 0,
                    suffocation: 0,
                    rash: 0,
                    vomiting: 0,
                    ears_swelling: 0,
                    stomach_ache: 40,
                    intestants_disorder: 0,
                    skin_yellowing: 60,
                    headache: 0,
                    chills: 0,
                    photosensitivity: 0
                },
                description: ""
            },
        ]
    });
}

export async function getDiseases() {
    try {
        const docRef = doc(db, "diseases", "disease_list");
        const docSnap = await getDoc(docRef);
        return docSnap.data().list
    }
    catch (error) {
        console.log("üöÄ ~ file: firebaseDB.js ~ line 202 ~ getDiseases ~ error", error)
    }
}

export async function createUser(email, dob, gender){
    setDoc(doc(db, 'users', email), {
        dob: dob,
        gender: gender, 
        diagnostics: []
    })
}

export async function getUserDeseases(email){
    try {
        const docRef = doc(db, "users", email);
        const docSnap = await getDoc(docRef);
        return docSnap.data().diagnostics;
    }
    catch (error) {
        console.log("üöÄ ~ file: firebaseDB.js ~ line 202 ~ getDiseases ~ error", error)
    }
}

export async function getQuestions() {
    try {
        const questionsCollection = collection(db, 'questions');
        const questionsSnapshot = await getDocs(questionsCollection);
        let questionsList = questionsSnapshot.docs.map(doc => {
            return { ...doc.data(), key: doc.id };
        });

        questionsList.sort((a, b) => a.level - b.level);

        return questionsList;
    } catch (error) {
        debugger;
    }
}

export async function getAnswers() {
    try {
        const answersCollection = collection(db, 'answers');
        const answersSnapshot = await getDocs(answersCollection);
        let answersList = answersSnapshot.docs.map(doc => {
            return { ...doc.data() };
        });
        return answersList;
    } catch (error) {
        debugger;
    }
}

export async function writeQuestions() {
    setDoc(doc(db, 'questions', 'novice'), {
        name: '–ù–æ–≤–∞—á–æ–∫',
        questions: [
            {
                text: '–ü–µ—Ä–µ–∂–∏–≤–∞—î—Ç–µ –∑–∞ —É—Å–ø—ñ—Ö –≤ —Ä–æ–±–æ—Ç—ñ',
                options: [
                    { text: '–°–∏–ª—å–Ω–æ', value: 5 },
                    { text: '–ù–µ –¥—É–∂–µ', value: 3 },
                    { text: '–°–ø–æ–∫—ñ–π–Ω–∏–π', value: 2 }
                ]
            },

            {
                text: '–ü—Ä–∞–≥–Ω–µ—Ç–µ –¥–æ—Å—è–≥—Ç–∏ —à–≤–∏–¥–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É',
                options: [
                    { text: '–ü–æ—Å—Ç—É–ø–æ–≤–æ', value: 2 },
                    { text: '–Ø–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ', value: 3 },
                    { text: '–î—É–∂–µ', value: 5 }
                ]
            },

            {
                text: '–õ–µ–≥–∫–æ –ø–æ–ø–∞–¥–∞—î—Ç–µ –≤ —Ç—É–ø–∏–∫ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –≤ —Ä–æ–±–æ—Ç—ñ',
                options: [
                    { text: '–ù–µ–æ–¥–º—ñ–Ω–Ω–æ', value: 5 },
                    { text: '–ü–æ—Å—Ç—É–ø–æ–≤–æ', value: 3 },
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 2 },
                ]
            },

            {
                text: '–ß–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω —á—ñ—Ç–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–í –æ–∫—Ä–µ–º–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö', value: 3 },
                    { text: '–ù–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω', value: 2 }
                ]
            }
        ]
    });

    setDoc(doc(db, 'questions', 'advanced_beginner'), {
        name: '–¢–≤–µ—Ä–¥–∏–π –ø–æ—á–∞—Ç–∫—ñ–≤–µ—Ü—å',
        questions: [
            {
                text: '–ß–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –≤–ª–∞—Å–Ω–∏–π –¥–æ—Å–≤—ñ–¥ –ø—Ä–∏ –≤–∏—Ä—ñ—à–µ–Ω–Ω—ñ –∑–∞–¥–∞—á',
                options: [
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 5 },
                    { text: '–ß–∞—Å—Ç–∫–æ–≤–æ', value: 3 },
                    { text: '–ù—ñ', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—å —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏  –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á',
                options: [
                    { text: '–¢–∞–∫', value: 2 },
                    { text: '–í –æ–∫—Ä–µ–º–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö', value: 3 },
                    { text: '–ù–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ', value: 5 }
                ]
            },

            {
                text: '–ß–∏ –≤—ñ–¥—á—É–≤–∞—î—Ç–µ –≤–∏ –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ',
                options: [
                    { text: '–¢–∞–∫', value: 2 },
                    { text: '–ß–∞—Å—Ç–∫–æ–≤–æ', value: 3 },
                    { text: '–í –æ–∫—Ä–µ–º–∏ –≤–∏–ø–∞–¥–∫–∞—Ö', value: 5 }
                ]
            }
        ]
    });

    setDoc(doc(db, 'questions', 'competent'), {
        name: '–ö–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–∏–π',
        questions: [
            {
                text: '–ß–∏ –º–æ–∂–µ—Ç–µ –≤–∏ –ø–æ–±—É–¥—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª—å –≤–∏—Ä—ñ—à—É–≤–∞–Ω–æ—ó –∑–∞–¥–∞—á—ñ',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–ù–µ –ø–æ–≤–Ω—ñ—Å—Ç—é', value: 3 },
                    { text: '–í –æ–∫—Ä–µ–º–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –≤–∏—Å—Ç–∞—á–∞—î –≤–∞–º —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ –ø—Ä–∏ –≤–∏—Ä—ñ—à–µ–Ω–Ω—ñ –∑–∞–¥–∞—á',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 3 },
                    { text: '–ü–æ—Ç—Ä—ñ–±–Ω–µ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –º–æ–∂–µ—Ç–µ –≤–∏—Ä—ñ—à—É–≤–∞—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏, –∑ —è–∫–∏–º–∏ —â–µ –Ω–µ —Å—Ç–∏–∫–∞–ª–∏—Å—å',
                options: [
                    { text: '–¢–∞–∫', value: 2 },
                    { text: '–í –æ–∫—Ä–µ–º–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö', value: 3 },
                    { text: '–ù—ñ', value: 5 }
                ]
            }
        ]
    });

    setDoc(doc(db, 'questions', 'proficient'), {
        name: '–î–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π',
        questions: [
            {
                text: '–ß–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –≤–∞–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á—ñ',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–í –æ–∫—Ä–µ–º–∏—Ö –¥–µ—Ç–∞–ª—è—Ö', value: 3 },
                    { text: '–í –∑–∞–≥–∞–ª—å–Ω–æ–º—É', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –ø–µ—Ä–µ–≥–ª—è–¥–∞—î—Ç–µ –≤–∏ —Å–≤–æ—ó –Ω–∞–º—ñ—Ä–∏ –¥–æ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 3 },
                    { text: '–ö–æ–ª–∏ —î –ø–æ—Ç—Ä–µ–±–∞', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –∑–¥–∞—Ç–Ω—ñ –≤–∏ –Ω–∞–≤—á–∞—Ç–∏—Å—å —É —ñ–Ω—à–∏—Ö',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 3 },
                    { text: '–ö–æ–ª–∏ —î –ø–æ—Ç—Ä–µ–±–∞', value: 2 }
                ]
            }
        ]
    });

    setDoc(doc(db, 'questions', 'expert'), {
        name: '–ï–∫—Å–ø–µ—Ä—Ç',
        questions: [
            {
                text: '–ß–∏ –æ–±–∏—Ä–∞—î—Ç–µ –≤–∏ –Ω–æ–≤—ñ –º–µ—Ç–æ–¥–∏ —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–í–∏–±—ñ—Ä–∫–æ–≤–æ', value: 3 },
                    { text: '–í–∏—Å—Ç–∞—á–∞—î –¥–æ—Å–≤—ñ–¥—É', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –¥–æ–ø–æ–º–∞–≥–∞—î –≤–ª–∞—Å–Ω–∞ —ñ–Ω—Ç—É—ó—Ü—ñ—è –ø—Ä–∏ –≤–∏—Ä—ñ—à–µ–Ω–Ω—ñ –∑–∞–¥–∞—á',
                options: [
                    { text: '–¢–∞–∫', value: 5 },
                    { text: '–ß–∞—Å—Ç–∫–æ–≤–æ', value: 3 },
                    { text: '–ü—Ä–∏ –µ–º–æ—Ü—ñ–π–Ω–æ–º—É –Ω–∞–ø—Ä—É–∂–µ–Ω–Ω—ñ', value: 2 }
                ]
            },

            {
                text: '–ß–∏ –∑–∞—Å—Ç–æ–≤—É—î—Ç–µ —Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á –∑–∞ –∞–Ω–∞–ª–æ–≥—ñ—î—é',
                options: [
                    { text: '–ß–∞—Å—Ç–æ', value: 5 },
                    { text: '–ó—Ä—ñ–¥–∫–∞', value: 3 },
                    { text: '–¢—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç', value: 2 }
                ]
            }
        ]
    });
}

export async function getProgress(login) {
    try {
        const docRef = doc(db, "answers", login)
        const docSnap = await getDoc(docRef);

        if (docSnap.exists()) {
            return docSnap.data()
        } else {
            return undefined;
        }
    } catch (error) {

    }
}

export async function addAnswers(data, login) {
    await setDoc(doc(db, 'answers', login), data);
}